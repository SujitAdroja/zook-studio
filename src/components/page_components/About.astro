---
const team = [
  {
    name: "John Doe",
    role: "Cofounder & Team Leader",
    image: "/peopleImages/person1.jpg",
    about:
      "ipsum earum atque, pariatur aliq ipsam quaerat et ut id tenetur sed nisi saepe, fugit totam velit!",
  },
  {
    name: "Juli chavla",
    role: "Cofounder & Project Manager",
    image: "/peopleImages/person2.jpg",
    about:
      "ipsum earum atque, pariatur aliq ipsam quaerat et ut id tenetur sed nisi saepe, fugit totam velit!",
  },
  {
    name: "suzen d",
    role: "Cofounder & Architect",
    image: "/peopleImages/person3.jpg",
    about:
      "ipsum earum atque, pariatur aliq ipsam quaerat et ut id tenetur sed nisi saepe, fugit totam velit!",
  },
];
---

<section>
  <!-- <div
  class={`relative h-screen  bg-[linear-gradient(to_top,rgba(0,0,0,1),transparent),url('/homepage/hero-image.jpg')] bg-cover bg-center`}
  > -->
  <div class={`relative h-screen overflow-hidden`}>
    <div
      class={`hero-image-container relative h-screen  bg-[linear-gradient(to_top,rgba(0,0,0,1),transparent),url('/homepage/hero-image.jpg')] bg-cover bg-center`}
    >
      <div
        class="absolute bottom-10 md:bottom-0 p-6 w-full flex items-center justify-center"
      >
        <div>
          <p
            class="title-tag text-white tracking-[0.4em] ml-1 text-center uppercase"
          >
            zook studio
          </p>
          <h1
            class="hero-heading w-full text-white text-center text-4xl font-bold md:text-7xl md:font-light uppercase"
          >
            Meet the team
          </h1>
        </div>
      </div>
    </div>
  </div>

  <div class="teams-grid md:py-28 text-white">
    <div class="grid grid-cols-1 md:grid-cols-3">
      <div class="teams-grid-left bg-white/10 py-4 px-2 md:p-4">
        <img
          src="/peopleImages/person1.jpg"
          alt="team image"
          class="about-team-image w-full h-60 object-cover object-center mb-2 transition-all duration-300 ease-in-out"
        />
        <div class="mb-4">
          <h3
            class="subtitle font-light italic text-5xl uppercase transition-all duration-300 ease-in-out"
          >
            Our
          </h3>
          <h3
            class="title font-bold text-5xl uppercase transition-all duration-300 ease-in-out"
          >
            Team
          </h3>
        </div>
        <p
          class="about-team font-light text-sm tracking-[-0.5px] mb-20 transition-all duration-300 ease-in-out"
        >
          Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima
          laborum molestiae quo, accusamus ipsum earum atque, pariatur aliquid
          ipsam quaerat et ut id tenetur sed nisi saepe, fugit totam velit!
        </p>
        <a
          href="/contact"
          class="inline-block relative uppercase mt-auto p-2 border border-white/20 font-light text-sm overflow-hidden
         before:content-[''] before:absolute before:top-0 before:left-0 before:h-full before:w-0
         before:bg-white/20 before:transition-all before:duration-300 before:ease-in-out
         hover:before:w-full"
        >
          Contact Us <span class="ml-4">&rarr;</span>
        </a>
      </div>
      <div class="teams-grid-right col-span-2 py-4 px-2 md:p-4 self-center">
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 md:gap-0">
          {
            team.map((member, index) => (
              <div
                class={`person person-${index + 1} relative cursor-pointer group`}
                data-person={index}
              >
                <div class="absolute inset-0 bg-gradient-to-b from-black/40 via-black/10 to-black/40 z-1" />

                <img
                  src={member.image}
                  alt=""
                  class="md:h-full h-80 w-full object-cover group-hover:blur-xs transition-all duration-300 ease-in-out"
                />
                <div class="absolute top-0 left-0 h-full w-full md:opacity-0 md:group-hover:opacity-100 flex items-end justify-between z-2 p-2 transition-all duration-300 ease-in-out">
                  <p>{member.name}</p>
                  <p class="font-light">{member.role}</p>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </div>

  <div
    class="about relative text-center h-screen flex flex-col items-center justify-center px-6"
  >
    <p
      class="para max-w-5xl mx-auto text-white text-3xl md:text-5xl font-semibold md:leading-12 mix-blend-difference"
    >
      Our work revolves around a deep commitment to design. The outcome? A
      visual experience that goes beyond all expectations.
    </p>
    <p
      class="para max-w-2xl md:max-w-xl mx-auto text-white text-md font-light mt-10 mix-blend-difference"
    >
      Our goal is to bring value through a design that not only impresses, but
      also provides a memorable experience tailored to your needs and lifestyle.
    </p>
  </div>
  <div class={`relative h-screen overflow-hidden text-white`}>
    <div
      class={`hero-image-container relative h-screen  bg-[linear-gradient(to_top,rgba(0,0,0,1),transparent),url('/images/living7.jpg')] bg-cover bg-center`}
    >
      <div
        class="absolute bottom-10 md:bottom-0 p-6 w-full flex items-center justify-center"
      >
        <div class="flex flex-col items-center">
          <p
            class="title title-tag text-white tracking-[0.4em] ml-1 text-center uppercase"
          >
            Explore a new world
          </p>
          <h1
            class="title hero-heading w-full text-white text-center text-4xl font-bold md:text-7xl uppercase"
          >
            Zook Projects
          </h1>
          <a
            href="/projects"
            class="title inline-block relative uppercase mt-auto p-2 border border-white/20 font-light text-sm overflow-hidden
         before:content-[''] before:absolute before:top-0 before:left-0 before:h-full before:w-0
         before:bg-white/20 before:transition-all before:duration-300 before:ease-in-out
         hover:before:w-full"
          >
            Click here <span class="ml-4">&rarr;</span>
          </a>
        </div>
      </div>
    </div>
  </div>

  <div class="py-30 md:py-60 flex items-center justify-center text-white">
    <div class="flex flex-col items-center">
      <h2 class="title text-3xl md:text-5xl font-bold mb-10">
        Let's work together.
      </h2>
      <a
        href="/contact"
        class="title inline-block uppercase text-xl border-b border-white/20 hover:border-white/80 transition-all duration-300 mb-10"
        >contact us</a
      >
      <p class="title tracking-[-0.5px] font-light">
        An new unique vision with unlimited possibilities.
      </p>
    </div>
  </div>
</section>

<script>
  // Define a type for the team member objects for better type safety
  interface TeamMember {
    name: string;
    role: string;
    image: string;
    about: string;
  }

  // Explicitly type the team array
  const team: TeamMember[] = [
    {
      name: "John Doe",
      role: "Cofounder & Team Leader",
      image: "/peopleImages/person1.jpg",
      about:
        "ipsum earum atque, pariatur aliq ipsam quaerat et ut id tenetur sed nisi saepe, fugit totam velit!",
    },
    {
      name: "Juli chavla",
      role: "Cofounder & Project Manager",
      image: "/peopleImages/person2.jpg",
      about:
        "ipsum earum atque, pariatur aliq ipsam quaerat et ut id tenetur sed nisi saepe, fugit totam velit!",
    },
    {
      name: "suzen d",
      role: "Cofounder & Architect",
      image: "/peopleImages/person3.jpg",
      about:
        "ipsum earum atque, pariatur aliq ipsam quaerat et ut id tenetur sed nisi saepe, fugit totam velit!",
    },
  ];

  // Get references to the DOM elements and assert their types
  const persons: NodeListOf<HTMLElement> = document.querySelectorAll(".person");
  const image = document.querySelector(
    ".about-team-image"
  ) as HTMLImageElement | null;
  const title = document.querySelector(".title") as HTMLElement | null;
  const subtitle = document.querySelector(".subtitle") as HTMLElement | null;
  const aboutDescription = document.querySelector(
    ".about-team"
  ) as HTMLElement | null;

  // Ensure all elements exist before proceeding
  if (image && title && subtitle && aboutDescription) {
    // Define a type for the original values
    interface OriginalValues {
      image: string | null;
      title: string | null;
      subtitle: string | null;
      about: string | null;
    }

    // Store the original values with their types
    const original: OriginalValues = {
      image: image.getAttribute("src"),
      title: title.textContent,
      subtitle: subtitle.textContent,
      about: aboutDescription.textContent,
    };

    persons.forEach((person: HTMLElement) => {
      person.addEventListener("mouseenter", () => {
        // Use optional chaining and a type guard for safety
        const index = person.dataset.person;
        if (index !== undefined) {
          const personIndex = parseInt(index);
          const teamMember = team[personIndex];

          // Update content if the team member exists
          if (teamMember) {
            image.src = teamMember.image;
            title.textContent = teamMember.name;
            subtitle.textContent = "Our team"; // This seems static, but kept as is
            aboutDescription.textContent = teamMember.about;
          }
        }
      });

      person.addEventListener("mouseleave", () => {
        // Reset to original values with null checks
        image.src = original.image || ""; // Provide a default empty string for safety
        if (original.title !== null) title.textContent = original.title;
        if (original.subtitle !== null)
          subtitle.textContent = original.subtitle;
        if (original.about !== null)
          aboutDescription.textContent = original.about;
      });
    });
  }

  // animation script starts from here-----------------------------------------
  import { gsap } from "gsap";
  import { ScrollTrigger, SplitText } from "gsap/all";
  gsap.registerPlugin(ScrollTrigger, SplitText);

  const titleSplit = SplitText.create(".hero-heading", { type: "words,chars" });
  const titelTagSplit = SplitText.create(".title-tag", { type: "chars" });
  gsap.from(titelTagSplit.chars, {
    opacity: 0,
    duration: 1,
    yPercent: 100,
    ease: "expo.out",
    stagger: 0.02,
  });
  gsap.from(titleSplit.chars, {
    opacity: 0,
    duration: 1,
    yPercent: 100,
    ease: "expo.out",
    stagger: 0.01,
  });

  const scrollTimeline = gsap.timeline({
    scrollTrigger: {
      trigger: ".teams-grid",
      start: "top center",
    },
  });

  scrollTimeline.from(".teams-grid-left", {
    opacity: 0,
    duration: 1.5,
    xPercent: -300,
    ease: "expo.out",
  });

  const aboutTimeline = gsap.timeline({
    scrollTrigger: {
      trigger: ".about",
      start: "top top",
    },
  });

  gsap.utils.toArray(".para").forEach((para: any) => {
    gsap.from(para, {
      y: 200,
      opacity: 0,
      duration: 1,
      stagger: 0.02,
      ease: "power3.out",
      scrollTrigger: {
        trigger: para,
        start: "top 90%",
        toggleActions: "play none none none",
      },
    });
  });

  gsap.utils.toArray(".title").forEach((title: any) => {
    const titleTextSplit = SplitText.create(title, {
      type: "chars",
    });
    gsap.from(titleTextSplit.chars, {
      y: 20,
      opacity: 0,
      duration: 1,
      stagger: 0.02,
      ease: "power3.out",
      scrollTrigger: {
        trigger: title,
        start: "top 90%",
        toggleActions: "play none none none",
      },
    });
  });
</script>
