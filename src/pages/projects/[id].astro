---
import Layout from "../../layouts/Layout.astro";
import "../../styles/global.css";
export function getStaticPaths() {
  return [
    { params: { id: decodeURI("commercial") } },
    { params: { id: decodeURI("residential") } },
    { params: { id: decodeURI("airbnb") } },
  ];
}
const { id } = Astro.params;
const projectList = [
  {
    type: "commercial",
    image: "/images/living5.jpg",
    projects: [
      {
        id: 1,
        title: "Epique Home",
        image: "/images/living1.jpg",
        location: "Bruchet",
        area: "350m2",
        type: "Commercial",
        year: 2025,
      },
      {
        id: 2,
        title: "Epique Home",
        image: "/images/living2.jpg",
        location: "Bruchet",
        area: "350m2",
        type: "Commercial",
        year: 2024,
      },
      {
        id: 3,
        title: "Epique Home",
        image: "/images/living3.jpg",
        location: "Bruchet",
        area: "350m2",
        type: "Commercial",
        year: 2023,
      },
      {
        id: 4,
        title: "Epique Home",
        image: "/images/living4.jpg",
        location: "Bruchet",
        area: "350m2",
        type: "Commercial",
        year: 2021,
      },
    ],
  },
  {
    type: "residential",
    image: "/images/living6.jpg",
    projects: [
      {
        id: 1,
        title: "Sea View",
        image: "/images/room4-1.jpg",
        location: "Bruchet",
        area: "350m2",
        type: "Commercial",
        year: 2025,
      },
      {
        id: 2,
        title: "Leaves Home",
        image: "/images/room3-1.jpg",
        location: "Bruchet",
        area: "350m2",
        type: "Commercial",
        year: 2024,
      },
      {
        id: 3,
        title: "Old Home",
        image: "/images/room1-3.jpg",
        location: "Bruchet",
        area: "350m2",
        type: "Commercial",
        year: 2023,
      },
      {
        id: 4,
        title: "Sunrise",
        image: "/images/room1-1.jpg",
        location: "Bruchet",
        area: "350m2",
        type: "Commercial",
        year: 2021,
      },
    ],
  },
  {
    type: "airbnb",
    image: "/images/living7.jpg",
    projects: [
      {
        id: 1,
        title: "Epique Home",
        image: "/images/living1.jpg",
        location: "Bruchet",
        area: "350m2",
        type: "Commercial",
        year: 2025,
      },
      {
        id: 2,
        title: "Epique Home",
        image: "/images/living2.jpg",
        location: "Bruchet",
        area: "350m2",
        type: "Commercial",
        year: 2024,
      },
      {
        id: 3,
        title: "Epique Home",
        image: "/images/living3.jpg",
        location: "Bruchet",
        area: "350m2",
        type: "Commercial",
        year: 2023,
      },
      {
        id: 4,
        title: "Epique Home",
        image: "/images/living4.jpg",
        location: "Bruchet",
        area: "350m2",
        type: "Commercial",
        year: 2021,
      },
    ],
  },
];
const project = projectList.filter((p) => p.type === id)[0];
---

<Layout
  ><div
    class={`hero-image-container relative text-white h-screen  bg-[linear-gradient(to_top,rgba(0,0,0,1),transparent),url('/images/living7.jpg')] bg-cover bg-no-repeat bg-center`}
  >
    <div class="absolute bottom-0 p-6 w-full">
      <div>
        <p
          class="title-tag text-white tracking-[0.4em] ml-1 text-center md:text-start"
        >
          ZOOK STUDIO
        </p>
        <h1
          class="hero-heading w-full text-white text-center text-4xl font-bold lg:text-start md:text-7xl md:font-light"
        >
          ZOOK Projects
        </h1>
      </div>
    </div>
  </div>

  <div class="py-20 md:py-28 text-white">
    <div
      class="flex flex-col md:flex-row items-center gap-4 md:gap-0 lg:items-start md:justify-between px-6"
    >
      <p
        class="title block md:hidden text-sm uppercase px-4 py-2 border border-white/40 rounded-full"
      >
        ZOOK <span class="font-[200]">{id}</span>
      </p>
      <h2
        class="title text-3xl lg:text-4xl font-semibold md:max-w-1/2 lg:max-w-xl text-center md:text-start"
      >
        Discover our projects <br /> and see the story of each one.
      </h2>
      <p
        class="title hidden md:block text-sm uppercase px-4 py-2 border border-white/40 rounded-full"
      >
        ZOOK <span class="font-[200]">{id}</span>
      </p>
    </div>
  </div>

  <div class="projects-section py-20 md:py-28 text-white px-2 md:px-6">
    <div class="md:mb-20">
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-x-4 gap-y-20">
        {
          project.projects.map((project) => (
            <div class="relative group overflow-hidden">
              <a href={`/project/${project.id}`}>
                <div class="absolute inset-0 bg-gradient-to-t from-black to-transparent z-1" />

                <img
                  src={project.image}
                  alt="living images"
                  class="h-120 md:h-150  w-full md:group-hover:scale-103 transition-all duration-400 ease-in-out"
                />
                <div class="absolute top-0 left-0 w-full h-full flex flex-col items-center justify-between md:justify-end z-2">
                  <div class="block text-xs md:hidden w-full flex item-center justify-center gap-3 md:gap-10 mt-4">
                    <p class="title z-1 font-medium shrink-0">
                      LOCATION -{" "}
                      <span class="text-white/70 md:font-[200]">
                        {project.location}
                      </span>
                    </p>
                    <p class="title z-1 font-medium shrink-0">
                      SURFACE -{" "}
                      <span class="text-white/70 md:font-[200]">
                        {project.area}
                      </span>
                    </p>
                    <p class="title z-1 font-medium shrink-0">
                      TYPE -{" "}
                      <span class="text-white/70 md:font-[200]">
                        {project.type}
                      </span>
                    </p>
                  </div>
                  <div>
                    <p class="title text-white/50 text-lg text-center">
                      Project Year - {project.year}
                    </p>
                    <h2 class="title text-4xl md:text-6xl text-center font-light mb-4">
                      {project.title}
                    </h2>
                    <div class="hidden md:flex w-full flex item-center justify-center gap-2 md:gap-10">
                      <p class="title z-1 font-medium shrink-0">
                        LOCATION -{" "}
                        <span class="text-white/70 font-[200]">
                          {project.location}
                        </span>
                      </p>
                      <p class="title z-1 font-medium shrink-0">
                        SURFACE -{" "}
                        <span class="text-white/70 font-[200]">
                          {project.area}
                        </span>
                      </p>
                      <p class="title z-1 font-medium shrink-0">
                        TYPE -{" "}
                        <span class="text-white/70 font-[200]">
                          {project.type}
                        </span>
                      </p>
                    </div>
                  </div>
                </div>
              </a>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</Layout>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger, SplitText } from "gsap/all";
  gsap.registerPlugin(ScrollTrigger, SplitText);

  const titleSplit = SplitText.create(".hero-heading", { type: "words,chars" });
  const titelTagSplit = SplitText.create(".title-tag", { type: "chars" });
  gsap.from(titelTagSplit.chars, {
    opacity: 0,
    duration: 1,
    yPercent: 100,
    ease: "expo.out",
    stagger: 0.02,
  });
  gsap.from(titleSplit.chars, {
    opacity: 0,
    duration: 1,
    delay: 0.5,
    yPercent: 100,
    ease: "expo.out",
    stagger: 0.01,
  });

  const scrollTimeline = gsap.timeline({
    scrollTrigger: {
      trigger: ".content",
      start: "top center",
    },
  });

  gsap.utils.toArray(".title").forEach((title: any) => {
    const titleTextSplit = SplitText.create(title, {
      type: "chars",
    });
    gsap.from(titleTextSplit.chars, {
      y: 20,
      opacity: 0,
      duration: 1,
      stagger: 0.02,
      ease: "power3.out",
      scrollTrigger: {
        trigger: title,
        start: "top 90%",
        toggleActions: "play none none none",
      },
    });
  });

  // gsap
  //   .timeline({
  //     scrollTrigger: {
  //       trigger: ".project-section",
  //       start: "top top",
  //       end: "bottom top",
  //       scrub: true,
  //     },
  //   })
  //   .from("img", { y: 100 }, 0);
</script>
